{{if .Code -}}
{{if hasPrefix .Code "/** @typedef"}}
{{.Code}}
{{else -}}
/** @typedef {typeof import('./sample.js')} SourceRecord */
/** @typedef {import('./helper.js').Helper} Helper */
{{.Code}}
{{end -}}
{{else -}}
/** @typedef {typeof import('./sample.js')} SourceRecord */
/** @typedef {import('./helper.js').Helper} Helper */

/**
 * This is the default javascript transformation function, you cannot rename it or change its signature.
 * This function will be called for each item in the dataset.
 * @param {SourceRecord} record - Represent one item from your dataset - Type is inferred from the input record.
 * @param {Helper} helper - Use it to reference Secrets and get Metadata.
 * @returns {SourceRecord|Array<SourceRecord>} - Return a record or an array of records.
 */
async function transform(record, helper) {

    // If you want to exclude a record, you can just return undefined.
    // If you want to return multiple records, you can return an array of records.
    return record;
}
{{ end -}}
